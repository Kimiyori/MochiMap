"""empty message

Revision ID: 93eda93c5abb
Revises: e5135dc9e313
Create Date: 2025-07-29 18:26:51.408201

"""
from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '93eda93c5abb'
down_revision: str | Sequence[str] | None = 'e5135dc9e313'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('resources')
    op.drop_table('connections')
    op.add_column('nodes', sa.Column('type', sa.String(), nullable=False))
    op.add_column('nodes', sa.Column('x', sa.Integer(), nullable=False))
    op.add_column('nodes', sa.Column('y', sa.Integer(), nullable=False))
    op.add_column('nodes', sa.Column('content', sa.String(), nullable=True))
    op.add_column('nodes', sa.Column('url', sa.String(), nullable=True))
    op.drop_column('nodes', 'description')
    op.drop_column('nodes', 'estimated_time_unit')
    op.drop_column('nodes', 'node_type')
    op.drop_column('nodes', 'difficulty_level')
    op.drop_column('nodes', 'estimated_time')
    op.drop_column('nodes', 'position_x')
    op.drop_column('nodes', 'position_y')
    op.drop_column('roadmaps', 'estimated_time_value')
    op.drop_column('roadmaps', 'estimated_time_unit')
    op.drop_column('roadmaps', 'difficulty_level')
    op.drop_column('roadmaps', 'owner_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('roadmaps', sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('roadmaps', sa.Column('difficulty_level', postgresql.ENUM('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='difficultylevel'), autoincrement=False, nullable=False))
    op.add_column('roadmaps', sa.Column('estimated_time_unit', postgresql.ENUM('MINUTES', 'HOURS', 'DAYS', 'WEEKS', name='timeunit'), autoincrement=False, nullable=False))
    op.add_column('roadmaps', sa.Column('estimated_time_value', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('nodes', sa.Column('position_y', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('nodes', sa.Column('position_x', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('nodes', sa.Column('estimated_time', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('nodes', sa.Column('difficulty_level', postgresql.ENUM('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='difficultylevel'), autoincrement=False, nullable=False))
    op.add_column('nodes', sa.Column('node_type', postgresql.ENUM('TOPIC', 'CONCEPT', 'PROJECT', 'QUIZ', 'RESOURCE', 'MILESTONE', name='nodetype'), autoincrement=False, nullable=False))
    op.add_column('nodes', sa.Column('estimated_time_unit', postgresql.ENUM('MINUTES', 'HOURS', 'DAYS', 'WEEKS', name='timeunit'), autoincrement=False, nullable=True))
    op.add_column('nodes', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('nodes', 'url')
    op.drop_column('nodes', 'content')
    op.drop_column('nodes', 'y')
    op.drop_column('nodes', 'x')
    op.drop_column('nodes', 'type')
    op.create_table('connections',
    sa.Column('roadmap_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('source_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('target_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('connection_type', postgresql.ENUM('SEQUENTIAL', 'OPTIONAL', 'REFERENCE', name='connectiontype'), autoincrement=False, nullable=False),
    sa.Column('label', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['roadmap_id'], ['roadmaps.id'], name=op.f('connections_roadmap_id_fkey')),
    sa.ForeignKeyConstraint(['source_id'], ['nodes.id'], name=op.f('connections_source_id_fkey')),
    sa.ForeignKeyConstraint(['target_id'], ['nodes.id'], name=op.f('connections_target_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('connections_pkey'))
    )
    op.create_table('resources',
    sa.Column('node_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('resource_type', postgresql.ENUM('ARTICLE', 'VIDEO', 'BOOK', 'COURSE', 'GITHUB', 'DOCUMENTATION', 'OTHER', name='resourcetype'), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_free', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], name=op.f('resources_node_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('resources_pkey'))
    )
    # ### end Alembic commands ###
